@use "sass:math";
@use "../../variables/grid" as gridVars;
@use "../../tools/media";
@use "../../tools/grid";

.tna-container {
  max-width: gridVars.$largest-container-width;
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: grid.gutter-width(0.5);
  padding-left: grid.gutter-width(0.5);

  box-sizing: border-box;

  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: stretch;

  &--no-padding,
  &--no-padding-all {
    max-width: gridVars.$largest-container-width - grid.gutter-width(2);
  }

  &--max {
    max-width: none;
  }

  &--centred {
    justify-content: center;
  }
}

.tna-column {
  padding-right: grid.gutter-width(0.5);
  padding-left: grid.gutter-width(0.5);

  box-sizing: border-box;

  &--container {
    display: flex;
    flex-wrap: wrap;
    justify-content: stretch;
    align-items: stretch;
  }

  &--align-top {
    align-self: flex-start;
  }

  &--align-centre {
    align-self: center;
  }

  &--align-bottom {
    align-self: flex-end;
  }
}

@include grid.columns-generator(gridVars.$column-count);

@include media.on-medium {
  @include grid.columns-generator(gridVars.$column-count-medium, "medium");
}

@include media.on-tiny {
  .tna-container {
    padding-right: grid.gutter-width-tiny(0.5);
    padding-left: grid.gutter-width-tiny(0.5);
  }

  .tna-column {
    padding-right: grid.gutter-width-tiny(0.5);
    padding-left: grid.gutter-width-tiny(0.5);
  }
}

@include media.on-small {
  @include grid.columns-generator(gridVars.$column-count-small, "small");
}

@include media.on-tiny {
  @include grid.columns-generator(gridVars.$column-count-tiny, "tiny");
}

.tna-container--no-padding,
.tna-container--no-padding-all,
.tna-container--no-padding-all > .tna-column,
.tna-column--no-padding,
.tna-column--container--no-padding-all,
.tna-column--container--no-padding-all > .tna-column {
  padding-right: 0;
  padding-left: 0;
}
